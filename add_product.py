#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–æ–≤ –≤ Premium Store
–ó–∞–ø—É—Å–∫: python add_product.py
"""

import os
import sys
from datetime import datetime

# –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ path –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞ –º–æ–¥—É–ª–µ–π
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

from app import app, db
from models import Product

def get_input(prompt, required=True, input_type=str):
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –≤–≤–æ–¥–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –≤–∞–ª–∏–¥–∞—Ü–∏–µ–π"""
    while True:
        try:
            value = input(f"{prompt}: ").strip()
            
            if required and not value:
                print("‚ùå –≠—Ç–æ –ø–æ–ª–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è!")
                continue
                
            if input_type == float:
                return float(value) if value else None
            elif input_type == int:
                return int(value) if value else None
            else:
                return value if value else None
                
        except ValueError:
            print(f"‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç! –û–∂–∏–¥–∞–µ—Ç—Å—è {input_type.__name__}")
        except KeyboardInterrupt:
            print("\n\nüëã –û—Ç–º–µ–Ω–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
            sys.exit(0)

def choose_category():
    """–í—ã–±–æ—Ä –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏–∑ —Å–ø–∏—Å–∫–∞"""
    from app import app
    from models import Category
    
    with app.app_context():
        categories = Category.query.all()
    
    if not categories:
        print("‚ùå –í —Å–∏—Å—Ç–µ–º–µ –Ω–µ—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏–π. –°–æ–∑–¥–∞–π—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Å–Ω–∞—á–∞–ª–∞.")
        return None
    
    print("\nüìÇ –í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é:")
    for i, category in enumerate(categories, 1):
        print(f"  {i}. {category.name}")
    
    print(f"  {len(categories) + 1}. + –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é")
    
    while True:
        try:
            choice = int(get_input("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –∫–∞—Ç–µ–≥–æ—Ä–∏–∏", required=True))
            if 1 <= choice <= len(categories):
                return categories[choice - 1].name
            elif choice == len(categories) + 1:
                return add_new_category()
            else:
                print(f"‚ùå –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ {len(categories) + 1}")
        except ValueError:
            print("‚ùå –í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä")

def choose_color():
    """–í—ã–±–æ—Ä —Ü–≤–µ—Ç–∞ –∏–∑ —Å–ø–∏—Å–∫–∞"""
    colors = {
        "1": ("black", "–ß–µ—Ä–Ω—ã–π"),
        "2": ("white", "–ë–µ–ª—ã–π"),
        "3": ("brown", "–ö–æ—Ä–∏—á–Ω–µ–≤—ã–π"),
        "4": ("beige", "–ë–µ–∂–µ–≤—ã–π"),
        "5": ("gray", "–°–µ—Ä—ã–π"),
        "6": ("blue", "–°–∏–Ω–∏–π"),
        "7": ("green", "–ó–µ–ª–µ–Ω—ã–π"),
        "8": ("red", "–ö—Ä–∞—Å–Ω—ã–π"),
        "0": (None, "–ù–µ —É–∫–∞–∑–∞–Ω")
    }
    
    print("\nüé® –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ü–≤–µ—Ç–∞:")
    for key, (_, name) in colors.items():
        print(f"  {key}. {name}")
    
    while True:
        try:
            choice = input("\n–í—ã–±–µ—Ä–∏—Ç–µ –Ω–æ–º–µ—Ä —Ü–≤–µ—Ç–∞: ").strip()
            
            if choice in colors:
                return colors[choice][0]
            else:
                print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –Ω–æ–º–µ—Ä —Ü–≤–µ—Ç–∞!")
                
        except KeyboardInterrupt:
            print("\n\nüëã –û—Ç–º–µ–Ω–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
            sys.exit(0)

def add_product():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞"""
    print("üõçÔ∏è  PREMIUM STORE - –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞")
    print("=" * 50)
    
    # –°–±–æ—Ä –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç–æ–≤–∞—Ä–µ
    name = get_input("üìù –ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞", required=True)
    price = get_input("üí∞ –¶–µ–Ω–∞ (—Å—É–º)", required=True, input_type=float)
    
    if price <= 0:
        print("‚ùå –¶–µ–Ω–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –±–æ–ª—å—à–µ –Ω—É–ª—è!")
        return False
    
    category = choose_category()
    color = choose_color()
    description = get_input("üìÑ –û–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞", required=True)
    image_url = get_input("üñºÔ∏è  URL –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)", required=False)
    
    # –°–±–æ—Ä –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
    gallery_images = []
    print("\nüì∏ –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è (–Ω–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–ø—É—Å–∫–∞):")
    for i in range(5):  # –ú–∞–∫—Å–∏–º—É–º 5 –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
        additional_url = get_input(f"   URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è {i+1}", required=False)
        if additional_url:
            gallery_images.append(additional_url)
        else:
            break
    
    # –ï—Å–ª–∏ URL –Ω–µ —É–∫–∞–∑–∞–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º placeholder
    if not image_url:
        image_url = "https://via.placeholder.com/400x500/D1BFA3/8C735B?text=–¢–æ–≤–∞—Ä"
    
    # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
    print("\n" + "=" * 50)
    print("üìã –ü–û–î–¢–í–ï–†–ñ–î–ï–ù–ò–ï –î–ê–ù–ù–´–•:")
    print("=" * 50)
    print(f"–ù–∞–∑–≤–∞–Ω–∏–µ: {name}")
    print(f"–¶–µ–Ω–∞: {price:,.0f} —Å—É–º")
    print(f"–ö–∞—Ç–µ–≥–æ—Ä–∏—è: {category}")
    print(f"–¶–≤–µ—Ç: {color or '–ù–µ —É–∫–∞–∑–∞–Ω'}")
    print(f"–û–ø–∏—Å–∞–Ω–∏–µ: {description}")
    print(f"–û—Å–Ω–æ–≤–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ: {image_url}")
    if gallery_images:
        print("–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:")
        for i, img_url in enumerate(gallery_images, 1):
            print(f"  {i}. {img_url}")
    print("=" * 50)
    
    confirm = input("\n‚úÖ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ç–æ–≤–∞—Ä? (y/n): ").strip().lower()
    
    if confirm not in ['y', 'yes', '–¥–∞', '–¥']:
        print("‚ùå –¢–æ–≤–∞—Ä –Ω–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω")
        return False
    
    # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    try:
        import json
        
        with app.app_context():
            product = Product(
                name=name,
                price=price,
                category=category,
                color=color,
                description=description,
                image_url=image_url,
                image_gallery=json.dumps(gallery_images) if gallery_images else None
            )
            
            db.session.add(product)
            db.session.commit()
            
            print(f"\n‚úÖ –¢–æ–≤–∞—Ä '{name}' —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!")
            print(f"üÜî ID —Ç–æ–≤–∞—Ä–∞: {product.id}")
            return True
            
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏: {e}")
        return False

def add_new_category():
    """–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏"""
    from app import app
    from models import Category, db
    
    print("\nüìÇ –î–û–ë–ê–í–õ–ï–ù–ò–ï –ù–û–í–û–ô –ö–ê–¢–ï–ì–û–†–ò–ò")
    print("=" * 40)
    
    name = get_input("üìù –ù–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏", required=True)
    description = get_input("üìÑ –û–ø–∏—Å–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)", required=False)
    
    try:
        with app.app_context():
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è —Å —Ç–∞–∫–∏–º –∏–º–µ–Ω–µ–º –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
            existing = Category.query.filter_by(name=name).first()
            if existing:
                print(f"‚ùå –ö–∞—Ç–µ–≥–æ—Ä–∏—è '{name}' —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!")
                return None
            
            category = Category(name=name, description=description)
            db.session.add(category)
            db.session.commit()
            
            print(f"‚úÖ –ö–∞—Ç–µ–≥–æ—Ä–∏—è '{name}' —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞!")
            return name
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏: {e}")
        return None

def manage_categories():
    """–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏"""
    from app import app
    from models import Category, db
    
    while True:
        print("\nüìÇ –£–ü–†–ê–í–õ–ï–ù–ò–ï –ö–ê–¢–ï–ì–û–†–ò–Ø–ú–ò")
        print("=" * 40)
        print("1. –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏")
        print("2. –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é")
        print("3. –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
        
        choice = get_input("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ", required=True)
        
        if choice == "1":
            with app.app_context():
                categories = Category.query.all()
                if categories:
                    print("\nüìã –°–ü–ò–°–û–ö –ö–ê–¢–ï–ì–û–†–ò–ô:")
                    print("-" * 30)
                    for cat in categories:
                        print(f"‚Ä¢ {cat.name}")
                        if cat.description:
                            print(f"  {cat.description}")
                        print(f"  –¢–æ–≤–∞—Ä–æ–≤: {len(cat.products)}")
                        print()
                else:
                    print("‚ùå –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
                    
        elif choice == "2":
            add_new_category()
            
        elif choice == "3":
            break
        else:
            print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä")


def delete_product():
    """–£–¥–∞–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –ø–æ ID —Å –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–º –≤—ã–≤–æ–¥–æ–º —Å–ø–∏—Å–∫–∞"""
    from models import Product

    with app.app_context():
        products = Product.query.all()
        if not products:
            print("‚ùå –¢–æ–≤–∞—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
            return

        print("\nüìã –°–ü–ò–°–û–ö –¢–û–í–ê–†–û–í:")
        for prod in products:
            print(f"  ID {prod.id}: {prod.name} ‚Äî {prod.price:,.0f} —Å—É–º")

        product_id = get_input("\n–í–≤–µ–¥–∏—Ç–µ ID —Ç–æ–≤–∞—Ä–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è", input_type=int)
        product = Product.query.get(product_id)

        if not product:
            print(f"‚ùå –¢–æ–≤–∞—Ä —Å ID {product_id} –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return

        confirm = input(f"‚ùó –£–¥–∞–ª–∏—Ç—å —Ç–æ–≤–∞—Ä '{product.name}'? (y/n): ").strip().lower()
        if confirm in ['y', 'yes', '–¥', '–¥–∞']:
            db.session.delete(product)
            db.session.commit()
            print("‚úÖ –¢–æ–≤–∞—Ä —É–¥–∞–ª—ë–Ω")
        else:
            print("‚ùå –û—Ç–º–µ–Ω–µ–Ω–æ")



def delete_category():
    """–£–¥–∞–ª–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø–æ ID —Å –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–º –≤—ã–≤–æ–¥–æ–º —Å–ø–∏—Å–∫–∞"""
    from models import Category

    with app.app_context():
        categories = Category.query.all()
        if not categories:
            print("‚ùå –ö–∞—Ç–µ–≥–æ—Ä–∏–π –Ω–µ—Ç")
            return

        print("\nüìÇ –°–ü–ò–°–û–ö –ö–ê–¢–ï–ì–û–†–ò–ô:")
        for cat in categories:
            print(f"  ID {cat.id}: {cat.name} ({len(cat.products)} —Ç–æ–≤–∞—Ä–æ–≤)")

        cat_id = get_input("\n–í–≤–µ–¥–∏—Ç–µ ID –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è", input_type=int)
        category = Category.query.get(cat_id)

        if not category:
            print(f"‚ùå –ö–∞—Ç–µ–≥–æ—Ä–∏—è —Å ID {cat_id} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
            return

        if category.products:
            print(f"‚ùó –í –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –µ—Å—Ç—å {len(category.products)} —Ç–æ–≤–∞—Ä–æ–≤. –£–¥–∞–ª–∏—Ç–µ –∏—Ö —Å–Ω–∞—á–∞–ª–∞.")
            return

        confirm = input(f"‚ùó –£–¥–∞–ª–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é '{category.name}'? (y/n): ").strip().lower()
        if confirm in ['y', 'yes', '–¥', '–¥–∞']:
            db.session.delete(category)
            db.session.commit()
            print("‚úÖ –ö–∞—Ç–µ–≥–æ—Ä–∏—è —É–¥–∞–ª–µ–Ω–∞")
        else:
            print("‚ùå –û—Ç–º–µ–Ω–µ–Ω–æ")


def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    while True:
        print("\nüè™ PREMIUM STORE - –ü–ê–ù–ï–õ–¨ –ê–î–ú–ò–ù–ò–°–¢–†–ê–¢–û–†–ê")
        print("=" * 50)
        print("1. –î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä")
        print("2. –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏")
        print("3. –£–¥–∞–ª–∏—Ç—å —Ç–æ–≤–∞—Ä")
        print("4. –£–¥–∞–ª–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é")
        print("5. –í—ã—Ö–æ–¥")

        
        choice = get_input("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ", required=True)
        
        if choice == "1":
            if add_product():
                print("\nüéâ –¢–æ–≤–∞—Ä —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω –≤ –º–∞–≥–∞–∑–∏–Ω!")
            else:
                print("\n‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä")
                
        elif choice == "2":
            manage_categories()
            
        elif choice == "3":
            delete_product()
        elif choice == "4":
            delete_category()
        elif choice == "5":
            print("\nüëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
            break
        else:
            print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä")

if __name__ == "__main__":
    main()